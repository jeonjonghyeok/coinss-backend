definitions:
  controller.emailPassword:
    properties:
      email:
        example: jjh123@naver.com
        type: string
      password:
        example: "123"
        type: string
    type: object
  controller.favorite:
    properties:
      name:
        example: Bitcoin
        type: string
    required:
    - name
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  model.Coin:
    properties:
      change_rate:
        type: number
      description:
        type: string
      english_name:
        type: string
      high_price:
        type: number
      korean_name:
        type: string
      low_price:
        type: number
      market:
        type: string
      price:
        type: number
    type: object
  model.User:
    properties:
      access_key:
        example: cY158XlCRODQljHva8pMjORsoxrKRdfg4S9jT8qa
        type: string
      email:
        example: jjh123@naver.com
        type: string
      name:
        example: jjh
        type: string
      password:
        example: "123"
        type: string
      secret_key:
        example: 2y0BcdVYH48Hxc8SEwfOucxAqMoL623K70j6OCWa
        type: string
    required:
    - access_key
    - email
    - name
    - password
    - secret_key
    type: object
  model.Wallet:
    properties:
      avg_buy_price:
        type: string
      avg_buy_price_modified:
        type: boolean
      balance:
        type: string
      currency:
        type: string
      locked:
        type: string
      unit_currency:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/coin/favorite:
    post:
      consumes:
      - application/json
      description: 관심코인 등록
      operationId: post-coin-favorite
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Faavorite
        in: body
        name: favorite
        required: true
        schema:
          $ref: '#/definitions/controller.favorite'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Register Favority Coin
      tags:
      - coin
  /api/v1/coin/favorites:
    get:
      consumes:
      - application/json
      description: 관심코인 조회
      operationId: post-coin-favorites
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Register Favority Coin
      tags:
      - coin
  /api/v1/coin/list:
    get:
      consumes:
      - application/json
      description: get coinlist
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Coin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Coin-List
      tags:
      - coin
  /api/v1/coin/wallet:
    get:
      consumes:
      - application/json
      description: get coinwallet
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Wallet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Coin-Wallet
      tags:
      - coin
  /api/v1/user/signin:
    post:
      consumes:
      - application/json
      description: 로그인
      operationId: post-user-signin
      parameters:
      - description: User
        in: body
        name: emailPassword
        required: true
        schema:
          $ref: '#/definitions/controller.emailPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Login
      tags:
      - user
  /api/v1/user/signup:
    post:
      consumes:
      - application/json
      description: 회원가입
      operationId: post-user-signup
      parameters:
      - description: User
        in: body
        name: model.User
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Register
      tags:
      - user
swagger: "2.0"
