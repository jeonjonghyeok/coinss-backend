basePath: /api/v1
definitions:
  controller.emailPassword:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  model.User:
    properties:
      accesskey:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      secretkey:
        type: string
    type: object
  rds.Resp_Quote:
    properties:
      data:
        items:
          properties:
            name:
              type: string
            quote:
              properties:
                BTC:
                  properties:
                    price:
                      type: number
                  type: object
                USD:
                  properties:
                    price:
                      type: number
                  type: object
              type: object
            symbol:
              type: string
          required:
          - name
          - symbol
          type: object
        type: array
      status:
        properties:
          timestamp:
            type: string
        type: object
    type: object
host: localhost:5000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /coin/list:
    get:
      consumes:
      - application/json
      description: get coinlist
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rds.Resp_Quote'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Coin-List
      tags:
      - coin
  /coin/wallet:
    get:
      consumes:
      - application/json
      description: get coinwallet
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rds.Resp_Quote'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Coin-Wallet
      tags:
      - coin
  /user/signin:
    post:
      consumes:
      - application/json
      description: get string by ID
      operationId: post-user-signin
      parameters:
      - description: User
        in: body
        name: emailPassword
        required: true
        schema:
          $ref: '#/definitions/controller.emailPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Login
      tags:
      - user
  /user/signup:
    post:
      consumes:
      - application/json
      description: get string by ID
      operationId: post-user-signup
      parameters:
      - description: User
        in: body
        name: model.User
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Register
      tags:
      - user
swagger: "2.0"
